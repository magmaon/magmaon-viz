---
import TableMap from '@assets/maps/2026_BETA_map.svg'
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/magmaon-viz/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Magmaon-Viz</title>
	</head>
	<body>
		<h1>Magmaon-Viz</h1>
		<main>
			<TableMap id="gameArea" />
			<button id="startButton" disabled>Start!</button>
			<button id="resetButton" disabled>Reset</button>
		</main>
	</body>
</html>

<style is:global>
	#gameArea {
		max-width: 56rem;
		width: 100%;
		height: auto;
		border: 2px solid black;
	}
</style>

<script>
	const gameArea = document.getElementById("gameArea");
	const startButton = document.getElementById("startButton");
	const resetButton = document.getElementById("resetButton");
	if (!gameArea || !startButton || !resetButton) {
		throw new Error("Failed to get elements");
	}

	// - Create a new game controller and renderer
	import {VizGameController} from "@lib/core/viz/game";
	import {SvgGameRenderer} from "@lib/renderer/svg-renderer";
	import {TeamImpl} from "@lib/core/state/team";
	import { Choregraph } from "@lib/choregraph";
	import { path1 } from "@lib/examples/robot-path";

	const vizRoot = document.createElementNS("http://www.w3.org/2000/svg", "g");
	vizRoot.setAttribute("id", "vizRoot");
	gameArea.appendChild(vizRoot);

	const yellowTeam = new TeamImpl("yellow");
	const blueTeam = new TeamImpl("blue");
	const svgRenderer = new SvgGameRenderer(vizRoot);
	const gameController = new VizGameController(blueTeam, yellowTeam, svgRenderer);
	const choregraph = new Choregraph(gameController);

	// - Register one yellow robot
	const yellowRobot = gameController.registerRobot("yellow");
	// - and make it move
	choregraph.registerTickAction((_, tick) => {
		const pathPos = path1(tick);
		yellowRobot.moveTo({ x: pathPos?.x, y: pathPos?.y, theta: pathPos?.theta });
	})

	// - Enable the start button
	startButton.removeAttribute("disabled");

	// - Add event listeners to the buttons
	startButton.addEventListener("click", () => {
		startButton.setAttribute("disabled", "true");
		resetButton.removeAttribute("disabled");
		choregraph.start();
	});
	resetButton.addEventListener("click", () => {
		startButton.removeAttribute("disabled");
		resetButton.setAttribute("disabled", "true");
		choregraph.reset();
	});
</script>